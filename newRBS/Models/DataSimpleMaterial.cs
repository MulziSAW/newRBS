// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace newRBS.Models
{

    using System;
    using System.Collections;
    using System.Runtime.InteropServices;

    #region Autogenerated code
    public class DataSimpleMaterial : DataMaterial
    {

        [Obsolete]
        protected DataSimpleMaterial(GLib.GType gtype) : base(gtype) { }
        public DataSimpleMaterial(IntPtr raw) : base(raw) { }

        [DllImport("libepsara-0.dll")]
        static extern IntPtr epsara_data_simple_material_new();

        public DataSimpleMaterial() : base(IntPtr.Zero)
        {
            if (GetType() != typeof(DataSimpleMaterial))
            {
                CreateNativeObject(new string[0], new GLib.Value[0]);
                return;
            }
            Raw = epsara_data_simple_material_new();
        }

        [GLib.Property("q-value")]
        public double QValue
        {
            get
            {
                GLib.Value val = GetProperty("q-value");
                double ret = (double)val;
                val.Dispose();
                return ret;
            }
            set
            {
                GLib.Value val = new GLib.Value(value);
                SetProperty("q-value", val);
                val.Dispose();
            }
        }

        [GLib.Property("atomic-no-det-ion")]
        public int AtomicNoDetIon
        {
            get
            {
                GLib.Value val = GetProperty("atomic-no-det-ion");
                int ret = (int)val;
                val.Dispose();
                return ret;
            }
            set
            {
                GLib.Value val = new GLib.Value(value);
                SetProperty("atomic-no-det-ion", val);
                val.Dispose();
            }
        }

        [GLib.Property("mass-no-remain-target")]
        public int MassNoRemainTarget
        {
            get
            {
                GLib.Value val = GetProperty("mass-no-remain-target");
                int ret = (int)val;
                val.Dispose();
                return ret;
            }
            set
            {
                GLib.Value val = new GLib.Value(value);
                SetProperty("mass-no-remain-target", val);
                val.Dispose();
            }
        }

        //[GLib.Property("cross-section")]
        //public Epsara.DataMatrix CrossSection
        //{
        //    get
        //    {
        //        GLib.Value val = GetProperty("cross-section");
        //        Epsara.DataMatrix ret = (Epsara.DataMatrix)val;
        //        val.Dispose();
        //        return ret;
        //    }
        //    set
        //    {
        //        GLib.Value val = new GLib.Value(value);
        //        SetProperty("cross-section", val);
        //        val.Dispose();
        //    }
        //}

        [GLib.Property("layer-begin")]
        public double LayerBegin
        {
            get
            {
                GLib.Value val = GetProperty("layer-begin");
                double ret = (double)val;
                val.Dispose();
                return ret;
            }
            set
            {
                GLib.Value val = new GLib.Value(value);
                SetProperty("layer-begin", val);
                val.Dispose();
            }
        }

        [GLib.Property("mass-no-initial-target")]
        public int MassNoInitialTarget
        {
            get
            {
                GLib.Value val = GetProperty("mass-no-initial-target");
                int ret = (int)val;
                val.Dispose();
                return ret;
            }
            set
            {
                GLib.Value val = new GLib.Value(value);
                SetProperty("mass-no-initial-target", val);
                val.Dispose();
            }
        }

        [GLib.Property("atomic-no-initial-target")]
        public int AtomicNoInitialTarget
        {
            get
            {
                GLib.Value val = GetProperty("atomic-no-initial-target");
                int ret = (int)val;
                val.Dispose();
                return ret;
            }
            set
            {
                GLib.Value val = new GLib.Value(value);
                SetProperty("atomic-no-initial-target", val);
                val.Dispose();
            }
        }

        [GLib.Property("atomic-density")]
        public double AtomicDensity
        {
            get
            {
                GLib.Value val = GetProperty("atomic-density");
                double ret = (double)val;
                val.Dispose();
                return ret;
            }
            set
            {
                GLib.Value val = new GLib.Value(value);
                SetProperty("atomic-density", val);
                val.Dispose();
            }
        }

        [GLib.Property("mass-no-det-ion")]
        public int MassNoDetIon
        {
            get
            {
                GLib.Value val = GetProperty("mass-no-det-ion");
                int ret = (int)val;
                val.Dispose();
                return ret;
            }
            set
            {
                GLib.Value val = new GLib.Value(value);
                SetProperty("mass-no-det-ion", val);
                val.Dispose();
            }
        }

        [GLib.Property("layer-end")]
        public double LayerEnd
        {
            get
            {
                GLib.Value val = GetProperty("layer-end");
                double ret = (double)val;
                val.Dispose();
                return ret;
            }
            set
            {
                GLib.Value val = new GLib.Value(value);
                SetProperty("layer-end", val);
                val.Dispose();
            }
        }

        [GLib.Property("nra-active")]
        public bool NraActive
        {
            get
            {
                GLib.Value val = GetProperty("nra-active");
                bool ret = (bool)val;
                val.Dispose();
                return ret;
            }
            set
            {
                GLib.Value val = new GLib.Value(value);
                SetProperty("nra-active", val);
                val.Dispose();
            }
        }

        [GLib.Property("eloss-active")]
        public bool ElossActive
        {
            get
            {
                GLib.Value val = GetProperty("eloss-active");
                bool ret = (bool)val;
                val.Dispose();
                return ret;
            }
            set
            {
                GLib.Value val = new GLib.Value(value);
                SetProperty("eloss-active", val);
                val.Dispose();
            }
        }

        [GLib.Property("rbs-active")]
        public bool RbsActive
        {
            get
            {
                GLib.Value val = GetProperty("rbs-active");
                bool ret = (bool)val;
                val.Dispose();
                return ret;
            }
            set
            {
                GLib.Value val = new GLib.Value(value);
                SetProperty("rbs-active", val);
                val.Dispose();
            }
        }

        [GLib.Property("atomic-no-remain-target")]
        public int AtomicNoRemainTarget
        {
            get
            {
                GLib.Value val = GetProperty("atomic-no-remain-target");
                int ret = (int)val;
                val.Dispose();
                return ret;
            }
            set
            {
                GLib.Value val = new GLib.Value(value);
                SetProperty("atomic-no-remain-target", val);
                val.Dispose();
            }
        }

        [DllImport("libepsara-0.dll")]
        static extern IntPtr epsara_data_simple_material_get_type();

        public static new GLib.GType GType
        {
            get
            {
                IntPtr raw_ret = epsara_data_simple_material_get_type();
                GLib.GType ret = new GLib.GType(raw_ret);
                return ret;
            }
        }

        #endregion
    }
}
